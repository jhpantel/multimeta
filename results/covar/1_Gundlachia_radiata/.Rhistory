# Competition model only
Model <- function(p, x) return(data.frame(x1 = x[1], x2 = x[2], x3 = x[3], y1 = ((p[1] * x[1]) / (1 + (p[4] * x[1]) + (p[5] * x[2]) + (p[6] * x[3]))), y2 = ((p[2] * x[2]) / (1 + (p[8] * x[2]) + (p[7] * x[1]) + (p[9] * x[3]))), y3 = ((p[3] * x[3]) / (1 + (p[12] * x[3]) + (p[10] * x[1]) + (p[11] * x[2])))) )
# FITTING algorithm
Residuals  <- function(p,obs) {sqrt(((obs$y1 - Model_all(p, obs[,c(1:3,14,15)])$E.1)^2 + (obs$y2 - Model_all(p, obs[,c(1:3,14,15)])$E.2)^2 + (obs$y3 - Model_all(p, obs[,c(1:3,14,15)])$E.3)^2))}
nunits
prms
parms
parms[c(10,10,10,1:9)]
res <- array(NA,dim=c(nunits*2,14),colnames=c("lambda1","lambda2","lambda3","a11","a12","a13","a21","a22","a23","a31","a32","a33","E","trt"))
res <- array(NA,dim=c(nunits*2,14))
colnames(res)=c("lambda1","lambda2","lambda3","a11","a12","a13","a21","a22","a23","a31","a32","a33","E","trt")
head(res)
# For tanks without evolution
obs <- Obs_no_evol
i <- 1
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs[obs$tank == i,])
# Competition model only
Model <- function(p, x) return(data.frame(x1 = x[1], x2 = x[2], x3 = x[3], y1 = ((p[1] * x[1]) / (1 + (p[4] * x[1]) + (p[5] * x[2]) + (p[6] * x[3]))), y2 = ((p[2] * x[2]) / (1 + (p[8] * x[2]) + (p[7] * x[1]) + (p[9] * x[3]))), y3 = ((p[3] * x[3]) / (1 + (p[12] * x[3]) + (p[10] * x[1]) + (p[11] * x[2])))) )
# FITTING algorithm
Residuals  <- function(p,obs) {sqrt(((obs$y1 - Model_all(p, obs[,c(1:3,14,15)])$E.1)^2 + (obs$y2 - Model_all(p, obs[,c(1:3,14,15)])$E.2)^2 + (obs$y3 - Model_all(p, obs[,c(1:3,14,15)])$E.3)^2))}
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs[obs$tank == i,])
modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs[1,])
p <- c(2, 2, 2, rep(0.001,9))
# FITTING algorithm
Residuals  <- function(p,obs) {sqrt(((obs$y1 - Model(p, obs[,c(1:3,14,15)])$x1.1)^2 + (obs$y2 - Model(p, obs[,c(1:3,14,15)])$x1.2)^2 + (obs$y3 - Model(p, obs[,c(1:3,14,15)])$x1.3)^2))}
head(obs)
Model(p,obs[1,1:3])
# Competition model only
Model <- function(p, x) return(data.frame(x1 = x[1], x2 = x[2], x3 = x[3], y1 = ((p[1] * x[1]) / (1 + (p[4] * x[1]) + (p[5] * x[2]) + (p[6] * x[3]))), y2 = ((p[2] * x[2]) / (1 + (p[8] * x[2]) + (p[7] * x[1]) + (p[9] * x[3]))), y3 = ((p[3] * x[3]) / (1 + (p[12] * x[3]) + (p[10] * x[1]) + (p[11] * x[2])))) )
# FITTING algorithm
Residuals  <- function(p,obs) {sqrt(((obs$y1 - Model(p, obs[,1:3])$x1.1)^2 + (obs$y2 - Model(p, obs[,1:3])$x2.1)^2 + (obs$y3 - Model(p, obs[,1:3])$x3.1)^2))}
Model(p,obs[1,1:3])
res <- array(NA,dim=c(nunits*2,14))
colnames(res)=c("lambda1","lambda2","lambda3","a11","a12","a13","a21","a22","a23","a31","a32","a33","E","trt")
# For tanks without evolution
obs <- Obs_no_evol
for(i in 1:nunits){
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs[obs$tank == i,1:3])
}
i <- 1
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs[obs$tank == i,1:3])
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs[obs$tank == i,])
# For tanks without evolution
use <- Obs_no_evol
i
obs <- use[use$tank == i,]
head)obs
head(obs)
Residuals(p,obs)
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),use[use$tank == i,])
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i,])
P
sP <- summary(P)
sP$par
sP$par[,1]
use[use$tank == i,]
head(use)
unique(use[use$tank == i,14])
# For tanks without evolution
use <- Obs_no_evol
for(i in 1:nunits){
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i,])
sP <- summary(P)
res[i,1:12] <- sP[,1]
res[i,13] <- unique(use[use$tank == i,14])
res[i,15] <- i
}
i
i <- 1
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i,])
res <- array(NA,dim=c(nunits*2,14))
colnames(res)=c("lambda1","lambda2","lambda3","a11","a12","a13","a21","a22","a23","a31","a32","a33","E","trt")
# For tanks without evolution
use <- Obs_no_evol
for(i in 1:nunits){
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i,])
sP <- summary(P)
res[i,1:12] <- sP$par[,1]
res[i,13] <- unique(use[use$tank == i,14])
res[i,15] <- i
}
i
P
i
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i,])
sP <- summary(P)
sP$par[,1]
res[i,1:12]
res[i,1:12] <- sP$par[,1]
unique(use[use$tank == i,14])
res[i,13]
i
res[i,14]
res[i,14] <- i
res <- array(NA,dim=c(nunits*2,14))
colnames(res)=c("lambda1","lambda2","lambda3","a11","a12","a13","a21","a22","a23","a31","a32","a33","E","trt")
# For tanks without evolution
use <- Obs_no_evol
for(i in 1:nunits){
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i,])
sP <- summary(P)
res[i,1:12] <- sP$par[,1]
res[i,13] <- unique(use[use$tank == i,14])
res[i,14] <- i
}
i
res
var(res$lambda1)
res <- as.data.frame(res)
var(res$lambda1)
var(res$lambda1,na.rm=TRUE)
?modFit
11:(nunits*2)
use <- Obs
for(i in 11:(nunits*2)){
P <- modFit(f = Residuals, p = c(2, 2, 2, rep(0.001,9)),obs=use[use$tank == i-10,])
sP <- summary(P)
res[i,1:12] <- sP$par[,1]
res[i,13] <- unique(use[use$tank == i-10,14])
res[i,14] <- i-10
}
i
res
## Plotting observations and model fit with parameters
x <- 0:300
par(mfrow = c(1, 1))
plot(Obs_no_evol$y1[Obs_no_evol$E == 0.1], pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
points(Obs_no_evol$y2[Obs_no_evol$E == 0.1], pch = 16, cex = .5, col="blue")
points(Obs_no_evol$y3[Obs_no_evol$E == 0.1], pch = 16, cex = .5, col="red")
res[1,]
lines(Model(res[1,1:12],Obs_no_evol[,1:3])$x1.1,col="grey")
Model(res[1,1:12],Obs_no_evol[,1:3])
res[1,1:12]
lines(Model(res[1,1:12],Obs_no_evol[1,1:3])$x1.1,col="grey")
lines(Model(res[1,1:12],Obs_no_evol[Obs_no_evol$tank==1,1:3])$x1.1,col="grey")
P$par
res[1,]
res[1,1:12]
as.numeric(res[1,1:12])
lines(Model(as.numeric(res[1,1:12]),Obs_no_evol[,1:3])$x1.1,col="grey")
lines(Model(as.numeric(res[1,1:12]),Obs_no_evol[Obs_no_evol$tank==1,1:3])$x1.1,col="grey")
plot(Obs_no_evol$y1[Obs_no_evol$tank == 1],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
i <- 1
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
par(mfrow = c(10, 10))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
}
par(mfrow = c(10, 10))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
}
par(mfrow = c(10, 10))
## Plotting observations and model fit with parameters
x <- 0:300
par(mfrow = c(10, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",length=12,width=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
}
dev.off()
i <- 1
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
i <- 2
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
i <- 10
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
i <- 11
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
i <- 20
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
i <- 1
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
par(mfrow = c(10, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",length=12,width=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
}
dev.off()
dev.off()
i
par(mfrow = c(2, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",length=12,width=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
}
dev.off()
par(mfrow = c(2, 10))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
pdf("/Users/jhpantel/Desktop/fig.pdf",length=12,width=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
?pdf
par(mfrow = c(2, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",height=12,width=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
}
dev.off()
par(mfrow = c(2, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",height=12,width=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
}
dev.off()
par(mfrow = c(2, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
par(mfcol = c(2, 10))
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
par(mfcol = c(2, 10))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
plot(Obs_no_evol$y1[Obs_no_evol$E == 0.1], pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
par(mfcol = c(10, 2))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
par(mfrow = c(10, 2))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
par(mfrow = c(5, 4))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
pdf("/Users/jhpantel/Desktop/fig.pdf",width=12,height=12)
par(mfrow = c(4, 5))
for(i in 1:10){
plot(Obs_no_evol$y1[Obs_no_evol$tank == i],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000),xlab="time",ylab="N")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x1.1,col="grey")
points(Obs_no_evol$y2[Obs_no_evol$tank == i],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x2.1,col="grey")
points(Obs_no_evol$y3[Obs_no_evol$tank == i],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs_no_evol[Obs_no_evol$tank==i,1:3])$x3.1,col="grey")
}
for(i in 11:20){
plot(Obs$y1[Obs$tank == i-10],pch = 16, cex = .5, xlim = c(0, 300), ylim = c(0, 1000))
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x1.1,col="grey")
points(Obs$y2[Obs$tank == i-10],pch = 16, cex = .5,col="grey")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x2.1,col="grey")
points(Obs$y3[Obs$tank == i-10],pch = 16, cex = .5,col="skyblue")
lines(Model(as.numeric(res[i,1:12]),Obs[Obs$tank==i-10,1:3])$x3.1,col="grey")
}
dev.off()
res
boxplot(res[1:5,1],res[6:10,1],res[11:15,1],res[16:20,1])
par(mfrpw=c(1,1))
par(mfrow=c(1,1))
boxplot(res[1:5,1],res[6:10,1],res[11:15,1],res[16:20,1])
par(mfrow=c(4,3))
for(i in 1:12){
boxplot(res[1:5,i],res[6:10,i],res[11:15,i],res[16:20,i])
}
par(mfrow=c(4,3))
for(i in 1:12){
boxplot(res[1:5,i],res[6:10,i],res[11:15,i],res[16:20,i])
}
par(mfrow=c(4,3))
for(i in 1:12){
boxplot(res[1:5,i],res[6:10,i],res[11:15,i],res[16:20,i])
}
sP$residuals
sP$modVariance
# Model with trait evolution
Model <- function(p,x) return(data.frame(x1=x[1],x2=x[2],x3=x[3],x4=x[4],x5=x[5],x6=x[6],x7=x[7],y1 = round(((p[6]*exp((-(((p[1] + (1-p[3])*p[2])/(p[2]+p[1])) * (x[7]-x[4]))^2) / (2*(p[2]+p[1])))) * x[1]) / (1 + p[9]*x[1] + p[10]*x[2] + p[11]*x[3])),y2 = round(((p[7]*exp((-(((p[1] + (1-p[4])*p[2])/(p[2]+p[1])) * (x[7]-x[5]))^2) / (2*(p[2]+p[1])))) * x[2]) / (1 + p[13]*x[2] + p[12]*x[1] + p[14]*x[3])),y3 = round(((p[8]*exp((-(((p[1] + (1-p[5])*p[2])/(p[2]+p[1])) * (x[7]-x[6]))^2) / (2*(p[2]+p[1])))) * x[3]) / (1 + p[17]*x[3] + p[15]*x[1] + p[16]*x[2])),y4 = x[7] - (((p[1] + (1-p[3])*p[2])/(p[2]+p[1])) * (x[7]-x[4])),y5 = x[7] - (((p[1] + (1-p[4])*p[2])/(p[2]+p[1])) * (x[7]-x[5])),y6 = x[7] - (((p[1] + (1-p[5])*p[2])/(p[2]+p[1])) * (x[7]-x[6]))))
## FITTING algorithm 1
Residuals  <- function(p) ((Obs$y1 - Model(p, Obs[,c(1:6,13)])$E.1)^2 + (Obs$y2 - Model(p, Obs[,c(1:6,13)])$E.2)^2 + (Obs$y3 - Model(p, Obs[,c(1:6,13)])$E.3)^2 + (Obs$yt1 - Model(p, Obs[,c(1:6,13)])$E.4)^2 + (Obs$yt2 - Model(p, Obs[,c(1:6,13)])$E.5)^2 + (Obs$yt3 - Model(p, Obs[,c(1:6,13)])$E.6)^2)
# For tanks without evolution
use <- Obs_no_evol
# For tanks without evolution
use <- Obs_no_evol
dim(use)
head(use)
P <- modFit(f = Residuals, p = c(.5,.5,0,0,0,2,2,2,rep(0.001,9)),obs=use[use$tank == i,])
p = c(.5,.5,0,0,0,2,2,2,rep(0.001,9))
length(p)
## FITTING algorithm 1
Residuals  <- function(p) sqrt(((Obs$y1 - Model(p, Obs[,c(1:6,14)])$E.1)^2 + (Obs$y2 - Model(p, Obs[,c(1:6,14)])$E.2)^2 + (Obs$y3 - Model(p, Obs[,c(1:6,14)])$E.3)^2 + (Obs$yt1 - Model(p, Obs[,c(1:6,14)])$E.4)^2 + (Obs$yt2 - Model(p, Obs[,c(1:6,14)])$E.5)^2 + (Obs$yt3 - Model(p, Obs[,c(1:6,14)])$E.6)^2))
# For tanks without evolution
use <- Obs_no_evol
P <- modFit(f = Residuals, p = c(.5,.5,0,0,0,2,2,2,rep(0.001,9)),obs=use[use$tank == i,])
i
i <- 1
P <- modFit(f = Residuals, p = c(.5,.5,0,0,0,2,2,2,rep(0.001,9)),obs=use[use$tank == i,])
## FITTING algorithm 1
Residuals  <- function(p,Obs) sqrt(((Obs$y1 - Model(p, Obs[,c(1:6,14)])$E.1)^2 + (Obs$y2 - Model(p, Obs[,c(1:6,14)])$E.2)^2 + (Obs$y3 - Model(p, Obs[,c(1:6,14)])$E.3)^2 + (Obs$yt1 - Model(p, Obs[,c(1:6,14)])$E.4)^2 + (Obs$yt2 - Model(p, Obs[,c(1:6,14)])$E.5)^2 + (Obs$yt3 - Model(p, Obs[,c(1:6,14)])$E.6)^2))
P <- modFit(f = Residuals, p = c(.5,.5,0,0,0,2,2,2,rep(0.001,9)),obs=use[use$tank == i,])
P <- modFit(f = Residuals, p = c(.5,.5,0,0,0,2,2,2,rep(0.001,9)),Obs=use[use$tank == i,])
sP <- summary(P)
sP$par[,1]
q()
?nl2sol
q()
q()
#Names of all species
spec <- c("1_Gundlachia_radiata", "2_Drepanotrema_lucidum", "3_Drepanotrema_depressissimum", "4_Drepanotrema_cimex", "5_Drepanotrema_aeruginosum", "6_Aplexa_marmorata", "7_Physa_acuta", "8_Lymnaea_columella", "9_Lymnaea_cubensis", "10_Plesiophysa_guadeloupensis", "11_Biomphalaria_straminea", "12_Biomphalaria_glabrata", "13_Biomphalaria_schrammi", "14_Pomacea_glauca", "15_Pyrgophorus_coronatus", "16_Marisa_cornuarietis", "17_Melanoides_tuberculata_PAP", "18_Melanoides_tuberculata_GOS", "19_Melanoides_tuberculata_FAL", "20_Melanoides_tuberculata_MAD", "21_Melanoides_tuberculata_CPF", "22_Melanoides_tuberculata_SEN", "23_Tarebia_granifera", "24_Neritina_virginea", "25_Eupera_viridans", "26_Indoplanorbis_exustus", "27_Helisoma_duryi")
spec_correct<-c("Gu. radiata","D. surinamense","D. depressissimum","D. cimex","D. aeruginosum","A. marmorata","Ph. acuta","Ps. columella","Ga. cubensis","Pl. guadeloupensis","B. kuhniana","B. glabrata","B. schrammi","Po. glauca","Py. parvulus","Ma. cornuarietis","Me. tuberculata PAP", "Me. tuberculata GOS","Me. tuberculata FAL","Me. tuberculata MAD","Me. tuberculata CPF", "Me. tuberculata SEN", "T. granifera", "N. virginea", "E. viridans", "I. exustus", "H. duryi" )
cbind(spec,spec_correct)
rm(list=ls())
setwd("~/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/no_covar/all_sites/results/1_Gundlachia_radiata")
#######################
# data loading        #
#######################
# matrix of site state
# 0 = non visited site or missing data
# 1 = site in state W (Wet)
# 2 = site in state D (Dry)
dry <- matrix(scan("dry_final.txt", n = 278*15,skip=1), 278, 15, byrow = TRUE)
unique(dry)
dry[dry == 0]
View(dry)
# matrixes of visits and repeated visits within the same occasion
# correspond  to two 280*15 matrices (sites by year)
# first eleven rows correspond to visits
# next eleven rows correspond to repeated visits within the same occasion
presence <- matrix(scan("presence.txt", n = 278*30,skip=1), 278, 30, byrow = TRUE)
unique(presence)
dim(presence)
presence[1,1]
unique(presence)
length(presence[presence == 1])
length(presence[presence == 2])
# state matrix
# 0 = non visited site or missing data
# 1 = species not detected (i.e., either dry or wet site)
# 2 = species detected (i.e., necessarily a wet site)
S <- matrix(scan("state.txt", n = 278*15,skip=1), 278, 15, byrow = TRUE)
length(S[S == 1])
length(S[S == 2])
length(S[S == 0])
rm(list=ls())
setwd("~/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/1_Gundlachia_radiata")
# covariates year and site-specific
colsource <- matrix(scan("colsource.txt", n = 278*15), 278, 15, byrow = TRUE)
View(colsource)
####Read in covariates####
# covariates site-specific
cov <- read.table("cov.txt",h=T)
head(cov)
habit <- read.table("habit.txt",h=T)
View(habit)
pluvio <- read.table("pluvio.txt",h=T)
View(habit)
View(pluvio)
q()
