x2_st_DS <- st_DS[is.na(st_TCnoD$amat) == F]
x3_st_DC <- st_DC[is.na(st_TCnoD$amat) == F]
x4_st_HE <- st_HE[is.na(st_TCnoD$amat) == F]
x5_st_TCnoD_amat <- st_TCnoD$amat[is.na(st_TCnoD$amat) == F]
nobs  <- length(Y)
library(rjags)
# THE MODEL.
model_string <- "model {
for( i in 1:nobs) {
Y[i] ~ dnorm(mu[i] , tau)
mu[i] <- alpha + beta1*x1_st_DE[i] + beta2*x2_st_DS[i] + beta3*x3_st_DC[i] + beta4*x4_st_HE[i] + beta5*x5_st_TCnoD_amat[i]
}
alpha ~ dnorm( 0 , 1.0E-12 )
beta1 ~ dnorm(0,precc1)
precc1 <- 1/varr1
varr1 <- (1-gam1)*0.0001+gam1*1
gam1 ~ dbern(0.5)
beta2 ~ dnorm(0,precc2)
precc2 <- 1/varr2
varr2 <- (1-gam2)*0.0001+gam2*1
gam2 ~ dbern(0.5)
beta3 ~ dnorm(0,precc3)
precc3 <- 1/varr3
varr3 <- (1-gam3)*0.0001+gam3*1
gam3 ~ dbern(0.5)
beta4 ~ dnorm(0,precc4)
precc4 <- 1/varr4
varr4 <- (1-gam4)*0.0001+gam4*1
gam4 ~ dbern(0.5)
beta5 ~ dnorm(0,precc5)
precc5 <- 1/varr5
varr5 <- (1-gam5)*0.0001+gam5*1
gam5 ~ dbern(0.5)
tau ~ dgamma( 0.001 , 0.001 )
}" # close quote for modelstring
writeLines(model_string,con="model.txt")
# Use R's built-in least-squares regression to get plausible initial values:
lmInfo = lm(Y ~ x1_st_DE + x2_st_DS + x3_st_DC  + x4_st_HE + x5_st_TCnoD_amat)
b0Init = lmInfo$coef[1]
b1Init = lmInfo$coef[2]
b2Init = lmInfo$coef[3]
b3Init = lmInfo$coef[4]
b4Init = lmInfo$coef[5]
b5Init = lmInfo$coef[6]
tauInit = nobs / sum(lmInfo$res^2)
initsList = list(
alpha = b0Init ,
beta1 = b1Init ,
beta2 = b2Init ,
beta3 = b3Init ,
beta4 = b4Init ,
beta5 = b5Init ,
tau = tauInit
)
#------------------------------------------------------------------------------
# RUN THE CHAINS
parameters = c("alpha" , "beta1" , "beta2", "beta3", "beta4", "beta5", "tau","gam1","gam2","gam3","gam4","gam5")  # The parameter(s) to be monitored.
adaptSteps = 1000             # Number of steps to "tune" the samplers.
burnInSteps = 2000            # Number of steps to "burn-in" the samplers.
nChains = 3                   # Number of chains to run.
numSavedSteps=100000           # Total number of steps in chains to save.
thinSteps=1                   # Number of steps to "thin" (1=keep every step).
nPerChain = ceiling( ( numSavedSteps * thinSteps ) / nChains ) # Steps per chain.
# Create, initialize, and adapt the model:
jagsModel = jags.model( "model.txt" , data=list(Y=Y,x1_st_DE=x1_st_DE,x2_st_DS=x2_st_DS,x3_st_DC=x3_st_DC,x4_st_HE=x4_st_HE,x5_st_TCnoD_amat=x5_st_TCnoD_amat,nobs=nobs) , inits=initsList , n.chains=nChains , n.adapt=adaptSteps )
# Burn-in:
cat( "Burning in the MCMC chain...\n" )
update( jagsModel , n.iter=burnInSteps )
# The saved MCMC chain:
cat( "Sampling final MCMC chain...\n" )
codaSamples = coda.samples( jagsModel , variable.names=parameters ,
n.iter=nPerChain , thin=thinSteps )
codaSamples[[1]][1,]
df=as.data.frame(rbind(codaSamples[[1]][,],codaSamples[[2]][,1:33],codaSamples[[3]][,1:33]))
df=as.data.frame(rbind(codaSamples[[1]][,],codaSamples[[2]][,],codaSamples[[3]][,]))
colnames(df)
sum(df$gam1) / nrow(df)
sum(df$gam2) / nrow(df)
sum(df$gam3) / nrow(df)
sum(df$gam4) / nrow(df)
sum(df$gam5) / nrow(df)
hist(Y)
hist(Y,breaks=10)
hist(dt_amat,breaks=10)
DC
hist(DC)
hist(DC,breaks=10)
hist(DC,breaks=20)
head(df)
hist(st_DC)
hist(st_DC,breaks=10)
hist(st_DC,breaks=20)
hist(dt_amat)
hist(dt_amat,breaks=10)
hist(abs_delta_T$amat,breaks=10)
hist(log(abs_delta_T$amat),breaks=10)
q()
D=matrix(c(
0,0, #X00
1,0, #X10
0,1, #X01
1,1),#X11
ncol=2,byrow=TRUE);
D
D=data.frame(D); names(D)<-c("G","K");
D
D$K<-factor(D$K); D$G<-factor(D$G);
D
D3=matrix(c(
0,0,0,  #X000
1,0,0,  #X100
0,1,0,  #X010
1,1,0,  #X110
0,0,1,  #X001
1,0,1,  #X101
0,1,1,  #X011
1,1,1), #X111
ncol=3,byrow=TRUE);
D3
D4=matrix(c(
0,0,0,0,  #X0000
1,0,0,0,  #X1000
0,1,0,0,  #X0100
1,1,0,0,  #X1100
0,0,1,0,  #X0010
0,1,1,0,  #X0110
1,0,1,0,  #X1010
1,1,1,0,  #X1110
0,0,0,1,  #X0001
1,0,0,1,  #X1001
0,1,0,1,  #X0101
1,1,0,1,  #X1101
0,0,1,1,  #X0011
0,1,1,1,  #X0111
1,0,1,1,  #X1011
1,1,1,1),  #X1111
ncol=4,byrow=TRUE);
D4=data.frame(D4); names(D4)<-c("G1","G2","K1","K2");
D4$K1<-factor(D4$K1);D4$K2<-factor(D4$K2); D4$G1<-factor(D4$G1);D4$G2<-factor(D4$G2)
D4
X4 = model.matrix(~G1 + G2 + K1 + K2,data=D4,
contrasts=list(G1="contr.helmert",G2="contr.helmert",K1="contr.helmert",K2="contr.helmert"        ));
X4
X4[,-1] = X4[,-1]/2;
X4
C4 = solve(t(X4)%*%X4)%*%t(X4);
?model.matrixz
?model.matrix
D4
X4 = model.matrix(~G1 + G2 + K1 + K2,data=D4,
contrasts=list(G1="contr.helmert",G2="contr.helmert",K1="contr.helmert",K2="contr.helmert"        ));
X4
D4
X5iii = model.matrix(~G1 + G2 + K1 + K2 + G1:G2 + K1:K2 + G1:K1 + G1:K2 + G2:K1 + G2:K2 + G1:G2:K1 + G1:G2:K2 + G1:K1:K2 + G2:K1:K2 + G1:G2:K1:K2, data=D5, contrasts=list(G1="contr.helmert",G2="contr.helmert",K1="contr.helmert",K2="contr.helmert"));
D5=matrix(c(
0,0,0,0,  #X0000
1,0,0,0,  #X1000
0,1,0,0,  #X0100
1,1,0,0,  #X1100
0,0,1,0,  #X0010
0,1,1,0,  #X0110
1,0,1,0,  #X1010
1,1,1,0,  #X1110
0,0,0,1,  #X0001
1,0,0,1,  #X1001
0,1,0,1,  #X0101
1,1,0,1,  #X1101
0,0,1,1,  #X0011
0,1,1,1,  #X0111
1,0,1,1,  #X1011
1,1,1,1), #X1111
ncol=4,byrow=TRUE);
D5
D5=data.frame(D5); names(D5)<-c("G1","G2","K1","K2");
D5$K1<-factor(D5$K1);D5$K2<-factor(D5$K2); D5$G1<-factor(D5$G1);D5$G2<-factor(D5$G2)
D5
X5iii = model.matrix(~G1 + G2 + K1 + K2 + G1:G2 + K1:K2 + G1:K1 + G1:K2 + G2:K1 + G2:K2 + G1:G2:K1 + G1:G2:K2 + G1:K1:K2 + G2:K1:K2 + G1:G2:K1:K2, data=D5, contrasts=list(G1="contr.helmert",G2="contr.helmert",K1="contr.helmert",K2="contr.helmert"));
X5iii
X5iii[,-1] = X5iii[,-1]/2;
X5iii
X5iii = model.matrix(~G1 + G2 + K1 + K2 + G1:G2 + K1:K2 + G1:K1 + G1:K2 + G2:K1 + G2:K2 + G1:G2:K1 + G1:G2:K2 + G1:K1:K2 + G2:K1:K2 + G1:G2:K1:K2, data=D5, contrasts=list(G1="contr.helmert",G2="contr.helmert",K1="contr.helmert",K2="contr.helmert"));
X5iii
X5iii[,-1] = X5iii[,-1]/2;
X5iii
?solve
C5iii = solve(t(X5iii)%*%X5iii)%*%t(X5iii);
C5iii
q()
blah <- runif(1000,0,1)
hist(blah,breaks=100)
blah <- runif(60000,0,1)
hist(blah,breaks=100)
?runif
head(blah)
hist(blah,breaks=100)
?dunif
?density
blah2 <- density(blah)
plot(blah2)
?density
plot(density(runif(60000,0,1)))
# Filled Density Plot
d <- density(mtcars$mpg)
plot(d, main="Kernel Density of Miles Per Gallon")
polygon(d, col="red", border="blue")
d <- density(runif(60000,0,1))
plot(d)
polygon(d, col="red", border="blue")
polygon(d, col="red", border="blue",main="",xlab="")
?plot
plot(d,main="",xlab="")
polygon(d, col="red", border="blue")
?dlogit
?logit
?rnorm
d <- density(rnorm(60000,0,1))
plot(d)
polygon(d, col="red", border="blue")
1/.0001
d <- density(rnorm(60000,0,10000))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
?dbern
(1-1)*0.0001 + 1*1
(1-0)*0.0001 + 0*1
1/((1-0)*0.0001 + 0*1)
d <- density(rnorm(60000,0,.0001))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,1))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,1/(10000^2))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,(1/(10000^2)))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,(1/(10000^2)))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,.0001))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,(1/(10000^2)))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,.0001))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,(1/(10000^2)))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,.0001))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
d <- density(rnorm(60000,0,(1/(10000^2)))
d <- density(rnorm(60000,0,(1/(10000^2))))
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
rm(list=ls())
load("~/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/16_Marisa_cornuarietis/jsample.Rdata")
df=as.data.frame(rbind(jsample.full[[1]][,1:33],jsample.full[[2]][,1:33],jsample.full[[3]][,1:33]))
head(df)
hist(df[,1],breaks=100)
d <- density(df[,1])
plot(d)
polygon(d, col="red", border="blue", main="",xlab="")
rm(list=ls())
load("~/OneDrive/Documents/snail_Jan_12_2017.RData")
dimnames(full)
full[,1,]
plot_beta <- function(x,y,lab){
##plot outline
plot(x[,1],1:27,type="n",xlim=c(-2.6,2.6),yaxt="n",xlab="",ylab="",main=lab)
axis(2, at=1:27,labels=spec_lab[order(x[,1])],las=1,cex.axis=1)
#significant highlighted in red
order <- rep(NA,length(which(y >= 0.6)))
for(i in 1:length(which(y >= 0.6))){
order[i] <- which(order(x[,1]) == which(y >= 0.6)[i])
}
xleft <- -2.6
ybottom <- order-.4
xright <- 2.8
ytop <- order+.4
rect(xleft,ybottom,xright,ytop,col=rgb(169,169,169,100,maxColorValue=255),border=NA)
#points
points(sort(x[,1]),1:27,pch=1,col="black",cex=1.5)
#95% C.I.
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),2], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),3], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
abline(v=0,lty=2)
}
plot_beta(full[,1,])
x <- full[,1,]
x
plot(x[,1],1:27,type="n",xlim=c(-2.6,2.6),yaxt="n",xlab="",ylab="",main=lab)
plot(x[,1],1:27,type="n",xlim=c(-2.6,2.6),yaxt="n",xlab="",ylab="",main="phiW")
axis(2, at=1:27,labels=spec_lab[order(x[,1])],las=1,cex.axis=1)
spec_lab <- c("Gundlachia radiata", "Drepanotrema lucidum", "Drepanotrema depressissimum", "Drepanotrema cimex", "Drepanotrema aeruginosum", "Aplexa marmorata", "Physa acuta", "Lymnaea columella", "Lymnaea cubensis", "Plesiophysa guadeloupensis", "Biomphalaria straminea", "Biomphalaria glabrata", "Biomphalaria schrammi", "Pomacea glauca", "Pyrgophorus coronatus", "Marisa cornuarietis", "Melanoides tuberculata PAP", "Melanoides tuberculata GOS", "Melanoides tuberculata FAL", "Melanoides tuberculata MAD", "Melanoides tuberculata CPF", "Melanoides tuberculata SEN", "Tarebia granifera", "Neritina virginea", "Eupera viridans", "Indoplanorbis exustus", "Helisoma duryi")
axis(2, at=1:27,labels=spec_lab[order(x[,1])],las=1,cex.axis=1)
order <- rep(NA,length(x))
order
order(x[,1])
for(i in 1:length(x)){
order[i] <- order(x[,1])
}
order <- order(x[,1])
order
xleft <- -2.6
ybottom <- order-.4
xright <- 2.8
ytop <- order+.4
rect(xleft,ybottom,xright,ytop,col=rgb(169,169,169,100,maxColorValue=255),border=NA)
points(sort(x[,1]),1:27,pch=1,col="black",cex=1.5)
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),2], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),3], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
abline(v=0,lty=2)
dimnames(full[[2]])
dimnames(full)[[2]]
x <- full[,1,]
lab <- "phiW"
plot(x[,1],1:27,type="n",xlim=c(0,1),yaxt="n",xlab="",ylab="",main=lab)
axis(2, at=1:27,labels=spec_lab[order(x[,1])],las=1,cex.axis=1)
par(mar=c(4,15,4,1))
plot(x[,1],1:27,type="n",xlim=c(0,1),yaxt="n",xlab="",ylab="",main=lab)
axis(2, at=1:27,labels=spec_lab[order(x[,1])],las=1,cex.axis=1)
sort(x[,1])
points(sort(x[,1]),1:27,pch=1,col="black",cex=1.5)
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),2], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),3], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
plot_res <- function(x,lab){
##plot outline
plot(x[,1],1:27,type="n",xlim=c(0,1),yaxt="n",xlab="",ylab="",main=lab)
axis(2, at=1:27,labels=spec_lab[order(x[,1])],las=1,cex.axis=1)
# #significant highlighted in red
# order <- order(x[,1])
# xleft <- -2.6
# ybottom <- order-.4
# xright <- 2.8
# ytop <- order+.4
# rect(xleft,ybottom,xright,ytop,col=rgb(169,169,169,100,maxColorValue=255),border=NA)
#points
points(sort(x[,1]),1:27,pch=1,col="black",cex=1.5)
#95% C.I.
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),2], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
arrows(sort(x[,1]), 1:27, x[(order(x[,1])),3], 1:27, length=0.025, angle=90, code=2, lwd=1, col="black")
abline(v=0,lty=2)
}
par(mar=c(4,15,4,1),mfrow=c(1,3))
plot_res(full[,1,],"phiW")
plot_res(full[,2,],"phiD")
plot_res(full[,3,],"cW")
spec_lab <- c("Gundlachia radiata", "Drepanotrema lucidum", "Drepanotrema depressissimum", "Drepanotrema cimex", "Drepanotrema aeruginosum", "Aplexa marmorata", "Physa acuta", "Lymnaea columella", "Lymnaea cubensis", "Plesiophysa guadeloupensis", "Biomphalaria straminea", "Biomphalaria glabrata", "Biomphalaria schrammi", "Pomacea glauca", "Pyrgophorus coronatus", "Marisa cornuarietis", "Melanoides tuberculata PAP", "Melanoides tuberculata GOS", "Melanoides tuberculata FAL", "Melanoides tuberculata MAD", "Melanoides tuberculata CPF", "Melanoides tuberculata SEN", "Tarebia granifera", "Neritina virginea", "Eupera viridans", "Indoplanorbis exustus", "Helisoma duryi")
pdf(file=paste("/Users/jhpantel/Desktop/phic_plot.pdf", sep=""), width=12, height=12)
par(mar=c(4,15,4,1),mfrow=c(1,3))
plot_res(full[,1,],"phiW")
plot_res(full[,2,],"phiD")
plot_res(full[,3,],"cW")
?par
par(mar=c(4,15,4,1),mfrow=c(1,3))
plot_res(full[,1,],"phiW")
plot_res(full[,2,],"phiD")
plot_res(full[,3,],"cW")
dev.off()
dev.off()
dev.off()
##beta phiW
pdf(file=paste("/Users/jhpantel/Desktop/phic_plot.pdf", sep=""), width=12, height=12)
#svg(file=paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/misc/NEW_phiW_beta_plot.svg", sep=""), width=12, height=12)
par(mar=c(4,15,4,1),mfrow=c(1,3))
plot_res(full[,1,],"phiW")
plot_res(full[,2,],"phiD")
plot_res(full[,3,],"cW")
dev.off()
full[,3,]
plot_res(full[,3,],"cW")
par(mar=c(4,15,4,1))
plot_res(full[,1,],"phiW")
col2rgb("blue")
col2rgb("red")
.7/(.7+.4)
.4/(.7+.4)
setwd("~/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/10_Plesiophysa_guadeloupensis")
cov <- read.table("cov.txt",h=T)
pluvio <- read.table("pluvio.txt",h=T)
lrs=pluvio$lrs
rs_1=pluvio$rs_July_Dec
lrs
plot(lrs,rs_1,1:15)
plot(lrs,1:15)
plot(1:15,lrs)
?plot
plot(1:15,lrs,type="l")
plot(1:15,lrs,type="l",ylab="cumulative rainfall March 1-May 31 (mm)", xlab="year")
plot(2001:2015,lrs,type="l",ylab="cumulative rainfall March 1-May 31 (mm)", xlab="year")
plot(2001:2015,lrs,type="n",ylab="cumulative rainfall March 1-May 31 (mm)", xlab="year")
points(2001:2015,lrs,pch=19,col="black",cex=2)
plot(2001:2015,lrs,type="l",ylab="cumulative rainfall March 1-May 31 (mm)", xlab="year")
points(2001:2015,lrs,pch=19,col="black",cex=2)
full[1,33,1]
obs_pr_obs
.9*.7
full[z,33,1]
full[,33,1]
full[,33,]
spec_short
##########Conduct PCA
sub <- full[,5:18,1]
cat <- c(rep("pul",13),rep("caeno",10),rep("other",2),rep("pul",2))
cat[rowSums(is.na(sub))>1] <- "missing"
sub_analyze <- sub[cat == "pul" | cat == "caeno",]
pc_sub <- prcomp(sub_analyze,scale=T)
blah <- pc_sub
spec_short <- c("G.rad", "D.luc", "D.dep", "D.cim", "D.aer", "A.mar", "P.acu", "L.col", "L.cub", "P.gua", "B.str", "B.gla", "B.sch", "Po.gla", "Py.cor", "Ma.cor", "PAP", "GOS", "FAL", "MAD", "CPF", "SEN", "T.gra", "N.vir","E.vir","I.exu", "H.dur")
param_short <-c("φsize","φveg","φstab","φlrs","φman","φriv","Csize","Cveg","Cstab","Cconnec","Crs","Ccol","Cman","Criv")
spec_short <- spec_short[cat == "pul" | cat == "caeno"]
################## Plot PCA
lambda <- blah$sdev * sqrt(nrow(blah$x))
plot (t(t(blah$x)/lambda),type = "n", asp = 1, axes = F, cex = 2, cex.lab = 2, xlab = "", ylab = "")
points(t((t(blah$x)/lambda)),pch=19,cex=2,col=c(rep("black",13),rep("red",9),rep("black",2)))
par (new=T)
Rot <- t(t(blah$rotation)*lambda)
XLIM <- c(-max(abs(Rot[,1])),max(abs(Rot[,1])))
XLIM <- XLIM+(XLIM*0.1)
#YLIM <- XLIM
#XLIM[1] <- XLIM[1] - 1
plot(Rot,col=4,axes=FALSE,xlim=c(-5,XLIM[2]),ylim=XLIM,pch="", xlab = "", ylab = "")
arrows (rep(0,nrow(blah$rotation)),rep(0,nrow(blah$rotation)),Rot[,1],Rot[,2],col="black", lwd = 2)
text (Rot[,1:2],param_short,col="red", pos = 2, offset = 1, cex = 1)
plot (t(t(blah$x)/lambda),type = "n", asp = 1, axes = F, cex = 2, cex.lab = 2, xlab = "", ylab = "")
text(t((t(blah$x)/lambda)),labels=spec_short,cex = 1, col=c(rep("black",13),rep("red",9),rep("black",2)), lwd = 3)
par (new=T)
Rot <- t(t(blah$rotation)*lambda)
XLIM <- c(-max(abs(Rot[,1])),max(abs(Rot[,1])))
XLIM <- XLIM+(XLIM*0.1)
#YLIM <- XLIM
#XLIM[1] <- XLIM[1] - 1
plot(Rot,col=4,axes=FALSE,xlim=c(-5,XLIM[2]),ylim=XLIM,pch="", xlab = "", ylab = "")
arrows (rep(0,nrow(blah$rotation)),rep(0,nrow(blah$rotation)),Rot[,1],Rot[,2],col="black", lwd = 2)
text (Rot[,1:2],param_short,col="red", pos = 2, offset = 1, cex = 1)
abline(h = -4.4, lwd = 3)
abline(v = -4.4, lwd = 3)
axis(1, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T,  pos = -5, las = 0, lwd = 3, cex.axis = 1.5)
axis(2, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T, pos = -5, las = 2, lwd = 3, cex.axis = 1.5)
title(xlab = "PC1", ylab = "PC2", line = 2, cex.lab = 2)
plot (t(t(blah$x)/lambda),type = "n", asp = 1, axes = F, cex = 2, cex.lab = 2, xlab = "", ylab = "")
text(t((t(blah$x)/lambda)),labels=spec_short,cex = 1, col="black", lwd = 3)
par (new=T)
Rot <- t(t(blah$rotation)*lambda)
XLIM <- c(-max(abs(Rot[,1])),max(abs(Rot[,1])))
XLIM <- XLIM+(XLIM*0.1)
#YLIM <- XLIM
#XLIM[1] <- XLIM[1] - 1
plot(Rot,col=4,axes=FALSE,xlim=c(-5,XLIM[2]),ylim=XLIM,pch="", xlab = "", ylab = "")
arrows (rep(0,nrow(blah$rotation)),rep(0,nrow(blah$rotation)),Rot[,1],Rot[,2],col="black", lwd = 2)
text (Rot[,1:2],param_short,col="red", pos = 2, offset = 1, cex = 1)
axis(1, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T,  pos = -5, las = 0, lwd = 3, cex.axis = 1.5)
axis(2, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T, pos = -5, las = 2, lwd = 3, cex.axis = 1.5)
?par
par(mar=c(c(5, 4, 4, 2) + 0.1))
plot (t(t(blah$x)/lambda),type = "n", asp = 1, axes = F, cex = 2, cex.lab = 2, xlab = "", ylab = "")
points(t((t(blah$x)/lambda)),pch=19,cex=2,col=c(rep("black",13),rep("red",9),rep("black",2)))
#text(t((t(blah$x)/lambda)),labels=spec_short,cex = 1, col=c(rep("black",13),rep("red",9),rep("black",2)), lwd = 3)
par (new=T)
Rot <- t(t(blah$rotation)*lambda)
XLIM <- c(-max(abs(Rot[,1])),max(abs(Rot[,1])))
XLIM <- XLIM+(XLIM*0.1)
#YLIM <- XLIM
#XLIM[1] <- XLIM[1] - 1
plot(Rot,col=4,axes=FALSE,xlim=c(-5,XLIM[2]),ylim=XLIM,pch="", xlab = "", ylab = "")
arrows (rep(0,nrow(blah$rotation)),rep(0,nrow(blah$rotation)),Rot[,1],Rot[,2],col="black", lwd = 2)
text (Rot[,1:2],param_short,col="red", pos = 2, offset = 1, cex = 1)
#abline(h = -4.4, lwd = 3)
#abline(v = -4.4, lwd = 3)
axis(1, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T,  pos = -5, las = 0, lwd = 3, cex.axis = 1.5)
#title(xlab = "PC1", ylab = "PC2", line = 2, cex.lab = 2)
axis(2, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T, pos = -5, las = 2, lwd = 3, cex.axis = 1.5)
plot (t(t(blah$x)/lambda),type = "n", asp = 1, axes = F, cex = 2, cex.lab = 2, xlab = "", ylab = "")
text(t((t(blah$x)/lambda)),labels=spec_short,cex = 1, col="black", lwd = 3)
par (new=T)
Rot <- t(t(blah$rotation)*lambda)
XLIM <- c(-max(abs(Rot[,1])),max(abs(Rot[,1])))
XLIM <- XLIM+(XLIM*0.1)
#YLIM <- XLIM
#XLIM[1] <- XLIM[1] - 1
plot(Rot,col=4,axes=FALSE,xlim=c(-5,XLIM[2]),ylim=XLIM,pch="", xlab = "", ylab = "")
arrows (rep(0,nrow(blah$rotation)),rep(0,nrow(blah$rotation)),Rot[,1],Rot[,2],col="black", lwd = 2)
text (Rot[,1:2],param_short,col="red", pos = 2, offset = 1, cex = 1)
#abline(h = -4.4, lwd = 3)
#abline(v = -4.4, lwd = 3)
axis(1, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T,  pos = -5, las = 0, lwd = 3, cex.axis = 1.5)
#title(xlab = "PC1", ylab = "PC2", line = 2, cex.lab = 2)
axis(2, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T, pos = -5, las = 2, lwd = 3, cex.axis = 1.5)
title(xlab = "PC1", ylab = "PC2", line = 2, cex.lab = 2)
plot (t(t(blah$x)/lambda),type = "n", asp = 1, axes = F, cex = 2, cex.lab = 2, xlab = "", ylab = "")
text(t((t(blah$x)/lambda)),labels=spec_short,cex = 1, col="black", lwd = 3)
par (new=T)
Rot <- t(t(blah$rotation)*lambda)
XLIM <- c(-max(abs(Rot[,1])),max(abs(Rot[,1])))
XLIM <- XLIM+(XLIM*0.1)
#YLIM <- XLIM
#XLIM[1] <- XLIM[1] - 1
plot(Rot,col=4,axes=FALSE,xlim=c(-5,XLIM[2]),ylim=XLIM,pch="", xlab = "", ylab = "")
arrows (rep(0,nrow(blah$rotation)),rep(0,nrow(blah$rotation)),Rot[,1],Rot[,2],col="black", lwd = 2)
text (Rot[,1:2],param_short,col="red", pos = 2, offset = 1, cex = 1)
#abline(h = -4.4, lwd = 3)
#abline(v = -4.4, lwd = 3)
axis(1, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T,  pos = -5, las = 0, lwd = 3, cex.axis = 1.5)
#title(xlab = "PC1", ylab = "PC2", line = 2, cex.lab = 2)
axis(2, at = c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), labels = T, pos = -5, las = 2, lwd = 3, cex.axis = 1.5)
q()
