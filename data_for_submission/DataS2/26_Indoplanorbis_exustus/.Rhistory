full[z,i,1] <- mean(sub)
full[z,i,2:3] <- quantile(sub, probs=c(.025,.975))
full[z,i,4] <- length(sub)
}
#Mean and CI values for alpha and pW parameters
sub <- df[,c(1:4,33)]
things[z,5,1] <- mean(sub$`alpha[1]`)
things[z,6,1] <- mean(sub$`alpha[2]`)
things[z,7,1] <- mean(sub$`alpha[3]`)
things[z,5,2:3] <- quantile(sub$`alpha[1]`,probs=c(.025,.975))
things[z,6,2:3] <- quantile(sub$`alpha[2]`,probs=c(.025,.975))
things[z,7,2:3] <- quantile(sub$`alpha[3]`,probs=c(.025,.975))
sub$`alpha[1]` <- logit_to_prob(sub$`alpha[1]`)
sub$`alpha[2]` <- logit_to_prob(sub$`alpha[2]`)
sub$`alpha[3]` <- exp(sub$`alpha[3]`)
sub$ln_eW_cW <- log((1-sub$`alpha[1]`) / (sub$`alpha[3]`))
sub$ln_eW_eD_cW <- log(((1-sub$`alpha[1]`)*Pr_W + (1-sub$`alpha[2]`)*(1-Pr_W))/(sub$`alpha[3]`*Pr_W))
sub$eW_cW <- (1-sub$`alpha[1]`) / (sub$`alpha[3]`)
sub$eW_eD_cW <- ((1-sub$`alpha[1]`)*Pr_W + (1-sub$`alpha[2]`)*(1-Pr_W))/(sub$`alpha[3]`*Pr_W)
things[z,1,1] <- mean(sub$ln_eW_cW)
things[z,2,1] <- mean(sub$ln_eW_eD_cW)
things[z,3,1] <- mean(sub$eW_cW)
things[z,4,1] <- mean(sub$eW_eD_cW)
things[z,1,2:3] <- quantile(sub$ln_eW_cW,probs=c(.025,.975))
things[z,2,2:3] <- quantile(sub$ln_eW_eD_cW,probs=c(.025,.975))
things[z,3,2:3] <- quantile(sub$eW_cW,probs=c(.025,.975))
things[z,4,2:3] <- quantile(sub$eW_eD_cW,probs=c(.025,.975))
sub <- sub[,1:5]
full[z,c(1:4,33),1] <- apply(sub,2,mean)
full[z,c(1:4,33),2:3] <- t(apply(sub,2,function(x) quantile(x,probs=c(.025,.975))))
#Extract proportion of models that included covariates via SVSS
#Remove non-gamma parameters from jsample MCMC object
sub <- df[,19:32]
nbMCMC <- nrow(sub)
full[z,19:32,1] <- apply(sub,2,function(x) sum(x==1)/nbMCMC)
}
#gather data
tab2 <- full[,c(1,3,2,33),1]
tab2_25 <- full[,c(1,3,2,33),2]
tab2_975 <- full[,c(1,3,2,33),3]
#format
tab2_format <- paste(round(tab2,2), " (", round(tab2_25,2), ", ", round(tab2_975,2), ")", sep="")
tab2_final <- data.frame(phiW=tab2_format[1:27], cW=tab2_format[28:54], phiD=tab2_format[55:81], pW=tab2_format[82:108], row.names=spec)
write.csv(tab2_final, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/Table2.csv")
#gather data
beta <- full[,5:10,1]
beta_25 <- full[,5:10,2]
beta_975 <- full[,5:10,3]
sig <- full[,19:24,1]
beta_sig <- array(NA,dim=c(27,6))
beta_sig[which(sig>=.6)] <- beta[which(sig>=.6)]
#format
beta_format <- paste(round(beta,2), " (", round(beta_25,2), ", ", round(beta_975,2), ")", sep="")
#Add an asterick if parameter is significant.
beta_format_sig <- beta_format
beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F] <- paste(beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F],"*",sep="")
beta_final <- data.frame(size=beta_format_sig[1:27], veg=beta_format_sig[28:54], stability=beta_format_sig[55:81], lrs=beta_format_sig[82:108], mangrove=beta_format_sig[109:135], river=beta_format_sig[136:162], row.names=spec)
write.csv(beta_final, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/Table3.csv")
#gather data
beta <- full[,11:18,1]
beta_25 <- full[,11:18,2]
beta_975 <- full[,11:18,3]
sig <- full[,25:32,1]
beta_sig <- array(NA,dim=c(27,8))
beta_sig[which(sig>=.6)] <- beta[which(sig>=.6)]
#format
beta_format <- paste(round(beta,2), " (", round(beta_25,2), ", ", round(beta_975,2), ")", sep="")
#Add an asterick if parameter is significant.
beta_format_sig <- beta_format
beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F] <- paste(beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F],"*",sep="")
beta_final <- data.frame(size=beta_format_sig[1:27], veg=beta_format_sig[28:54], stability=beta_format_sig[55:81], connec=beta_format_sig[82:108], rs=beta_format_sig[109:135], colsource=beta_format_sig[136:162], mangrove=beta_format_sig[163:189], river=beta_format_sig[190:216], row.names=spec)
write.csv(beta_final, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/Table4.csv")
site <- array(NA, dim=c(num_spec,5,278,15,3), dimnames=list(spec,c("site_intercept","site_all_covar","site_sig_covar","site_reduced_all_covar","site_reduced_sig_covar"),NULL,c("2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015"),c("eW","eD","cW")))
obs <- array(NA, dim=c(278,27), dimnames=list(NULL, spec))
ndir <- "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/1_Gundlachia_radiata/"
# covariates site-specific
cov <- read.table(paste(ndir,"cov.txt",sep=""),h=T)
size = cov$size
size <- (size-mean(size))/sd(size)
connec = cov$connec
connec <- (connec-mean(connec))/sd(connec)
veg = cov$veg
veg <- (veg-mean(veg))/sd(veg)
stability = cov$stability
stability <- (stability-mean(stability))/sd(stability)
habit <- read.table(paste(ndir,"habit.txt",sep=""),h=T)
mangrove = habit$mangrove
mangrove <- (mangrove-mean(mangrove))/sd(mangrove)
river = habit$river
river <- (river-mean(river))/sd(river)
# covariates year-specific
# little rainy season (lrs): cumulative rainfall during the little rainy season from March 1 to May 31, 92 days, e.g. during the period of putative extinction
# rainy season (rs): cumulative rainfall during the rainy season from (i) July 1 - Dec. 31 of year preceding sampling campaign (184 days, lrs_July_Dec) and (ii) 60 days preceding the first date of the sampling campaign (60 days, rs_60_days)
pluvio <- read.table(paste(ndir,"pluvio.txt",sep=""),h=T)
lrs=pluvio$lrs
rs_1=pluvio$rs_July_Dec
#rs_2=pluvio$rs_60_days
lrs <- (lrs-mean(lrs))/sd(lrs)
rs_1 <- (rs_1-mean(rs_1))/sd(rs_1)
#rs_2 <- (rs_2-mean(rs_2))/sd(rs_2)
for(z in 1:num_spec){
#Read in covariates year and site-specific
colsource <- matrix(scan(paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/",dir[z],"/",spec[z],"/colsource.txt", sep=""), n = 278*15), 278, 15, byrow = TRUE)
colsource <- (colsource-mean(colsource))/sqrt(mean((colsource-mean(colsource))*(colsource-mean(colsource))))
##site_intercept
#eW
site[z,1,,,1] <- 1-array(full[z,1,1],dim=c(278,15))
#eD
site[z,1,,,2] <- 1-array(full[z,2,1],dim=c(278,15))
#cW
site[z,1,,,3] <- array(full[z,3,1],dim=c(278,15))
##site_all_covar
include <- rep(1,33)
#eW
site[z,2,,,1] <- 1-logit_to_prob(matrix(things[z,5,1],nrow=278,ncol=15) + matrix(include[5]*full[z,5,1]*size,nrow=278,ncol=15,byrow=F) + matrix(include[6]*full[z,6,1]*veg,nrow=278,ncol=15,byrow=F) + matrix(include[7]*full[z,7,1]*stability,nrow=278,ncol=15,byrow=F) + matrix(include[8]*full[z,8,1]*lrs,nrow=278,ncol=15,byrow=T) + matrix(include[9]*full[z,9,1]*mangrove,nrow=278,ncol=15,byrow=F) + matrix(include[10]*full[z,10,1]*river,nrow=278,ncol=15,byrow=F))
#eD
site[z,2,,,2] <- 1-logit_to_prob(matrix(things[z,6,1],nrow=278,ncol=15))
#cW
site[z,2,,,3] <- exp(matrix(things[z,7,1],nrow=278,ncol=15) + matrix(include[11]*full[z,11,1]*size,nrow=278,ncol=15,byrow=F) + matrix(include[12]*full[z,12,1]*veg,nrow=278,ncol=15,byrow=F) + matrix(include[13]*full[z,13,1]*stability,nrow=278,ncol=15,byrow=F) + matrix(include[14]*full[z,14,1]*connec,nrow=278,ncol=15,byrow=F) + matrix(include[15]*full[z,15,1]*rs_1,nrow=278,ncol=15,byrow=T) + include[16]*full[z,16,1]*colsource + matrix(include[17]*full[z,17,1]*mangrove,nrow=278,ncol=15,byrow=F) + matrix(include[18]*full[z,18,1]*river,nrow=278,ncol=15,byrow=F))
##site_sig_covar
include <- rep(0,33)
for(i in 5:18){
if (full[z,i+14,1] >= 0.6) {include[i] <- 1}
}
#eW
site[z,3,,,1] <- 1-logit_to_prob(matrix(things[z,5,1],nrow=278,ncol=15) + matrix(include[5]*full[z,5,1]*size,nrow=278,ncol=15,byrow=F) + matrix(include[6]*full[z,6,1]*veg,nrow=278,ncol=15,byrow=F) + matrix(include[7]*full[z,7,1]*stability,nrow=278,ncol=15,byrow=F) + matrix(include[8]*full[z,8,1]*lrs,nrow=278,ncol=15,byrow=T) + matrix(include[9]*full[z,9,1]*mangrove,nrow=278,ncol=15,byrow=F) + matrix(include[10]*full[z,10,1]*river,nrow=278,ncol=15,byrow=F))
#eD
site[z,3,,,2] <- 1-logit_to_prob(matrix(things[z,6,1],nrow=278,ncol=15))
#cW
site[z,3,,,3] <- exp(matrix(things[z,7,1],nrow=278,ncol=15) +  matrix(include[11]*full[z,11,1]*size,nrow=278,ncol=15,byrow=F) + matrix(include[12]*full[z,12,1]*veg,nrow=278,ncol=15,byrow=F) + matrix(include[13]*full[z,13,1]*stability,nrow=278,ncol=15,byrow=F) + matrix(include[14]*full[z,14,1]*connec,nrow=278,ncol=15,byrow=F) + matrix(include[15]*full[z,15,1]*rs_1,nrow=278,ncol=15,byrow=T) + include[16]*full[z,16,1]*colsource + matrix(include[17]*full[z,17,1]*mangrove,nrow=278,ncol=15,byrow=F) + matrix(include[18]*full[z,18,1]*river,nrow=278,ncol=15,byrow=F))
##site_reduced_all_covar
S <- matrix(scan(paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/",spec[z],"/state.txt", sep=""), n = 278*15,skip=1), 278, 15, byrow = TRUE)
S[S==0] <- NA
S[S==1] <- 0
S[S==2] <- 1
obs[,z] <- rowSums(S,na.rm=TRUE) > 0
obs <- obs*1
#eW
site[z,4,obs[,z]==1,,1] <- site[z,2,obs[,z]==1,,1]
#eD
site[z,4,obs[,z]==1,,2] <- site[z,2,obs[,z]==1,,2]
#cW
site[z,4,obs[,z]==1,,3] <- site[z,2,obs[,z]==1,,3]
##site_reduced_sig_covar
#eW
site[z,5,obs[,z]==1,,1] <- site[z,3,obs[,z]==1,,1]
#eD
site[z,5,obs[,z]==1,,2] <- site[z,3,obs[,z]==1,,2]
#cW
site[z,5,obs[,z]==1,,3] <- site[z,3,obs[,z]==1,,3]
}
for(z in 1:num_spec){
for(d in 1:dim(site)[2]){
write.csv(site[z,d,,,1], paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/simulation/parameters/",spec[z],"_",dimnames(site)[2][[1]][d],"_","eW",".csv",sep=""),row.names=F)
write.csv(site[z,d,,,2], paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/simulation/parameters/",spec[z],"_",dimnames(site)[2][[1]][d],"_","eD",".csv",sep=""),row.names=F)
write.csv(site[z,d,,,3], paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/simulation/parameters/",spec[z],"_",dimnames(site)[2][[1]][d],"_","cW",".csv",sep=""),row.names=F)
}
}
site_coord_ec <- data.frame(array(NA,dim=c(278,32)))
site_list <- read.csv("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/final_data/final_site_list_coordinates.csv")
site_used <- read.table("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/final_data/final_island_list.txt", header=T)
dat <- subset(site_list, Numero.du.site %in% site_used$site)
dat_order <- dat[match(site_used$site, dat$Numero.du.site),]
site_format_name <- read.table("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/Visite_offline.txt", colClasses=c(NA,NA,"NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL"),header=T, blank.lines.skip=F, sep="\t")
#Trim R-friendly site names to sites used
site_format_name <- site_format_name[duplicated(site_format_name$site)==F,]
site_format_name <- subset(site_format_name, site %in% dat_order$Numero.du.site)
site_format_name <- site_format_name[match(dat_order$Numero.du.site,site_format_name$site),]
dat_order <- cbind(dat_order,site_format_name)
#Paste R-friendly site names into site_coord_ec
site_coord_ec[,1:5] <- dat_order[,c(6,7,5,3,4)]
colnames(site_coord_ec)[1:5] <- colnames(dat_order)[c(6,7,5,3,4)]
site_coord_ec$E[site_coord_ec$nom == "Ducos"] <- (683.4*1000)-425
site_coord_ec$N[site_coord_ec$nom == "Ducos"] <- (1758.25*1000)-290
site_coord_ec$E[site_coord_ec$nom == "Menard_Cambrai"] <- (685.1*1000)-425
site_coord_ec$N[site_coord_ec$nom == "Menard_Cambrai"] <- (1770*1000)-290
for(z in 1:num_spec){
site_coord_ec[,(z+5)] <- rowMeans((site[z,3,,,1]*wet_prob + site[z,3,,,2]*(1-wet_prob))/(site[z,3,,,3]*wet_prob))
}
colnames(site_coord_ec)[6:32] <- spec
write.csv(site_coord_ec, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/maps/site_coord_ec.csv",col.names=F)
mat_mean <- function(dat){
blah <- matrix(dat, nrow=278, ncol=15, byrow=F)
blah <- as.data.frame(blah)
blah <- data.matrix(blah)
result <- rowMeans(blah)
return(result)
}
psi <- array(NA, dim=c(278,num_spec), dimnames=list(NULL,spec))
for(z in 1:num_spec){
#Load results file
load(paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/",dir[z],"/",spec[z],"/jsample.RData", sep=""))
#Get z estimates
df=as.data.frame(rbind(jsample.full[[1]],jsample.full[[2]],jsample.full[[3]]))
df <- df[,34:4203]
#Extract mean
occupy <- apply(df, 1, mat_mean)
psi[,z] <- rowMeans(occupy)
#pr_occupied[z,,2:3] <- t(apply(occupy, 1, function(x) quantile(x, probs=c(.025,.975))))
}
psi <- psi-1  #Gives the percentage of years (across all JAGS iterations) that each site is occupied
write.csv(psi,file="/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/simulation/parameters/param_psi_bysite.csv",row.names=F)
save.image("~/Desktop/snail_Jan_12_2017.RData")
q()
q()
# I. Input raw data -------------------------------------------------------
dir_user <- getwd()
dir_rest <- "/Dropbox/JP_LG/JHP_Sarah_Space_Paper/data"
#community: A 20x21 matrix. Column 1 is site name and column 2 is region. Column 3-21 are the 19 zooplankton species. D. magna is column 9.
community <- read.table(paste(dir_user,dir_rest,"/community.txt",sep=""),header=T)
#environment: A 20x14 matrix. Column 1 is site name and column 2 is region. Column 3-14 are the 12 environmental variables.
environment <- read.table(paste(dir_user,dir_rest,"/environment.txt",sep=""),header=T)
#space: A 20x4 matrix. Column 1 is site name and column 2 is region. Column 3 is the Latitude and column 4 is the longitude of each site.
space <- read.table(paste(dir_user,dir_rest,"/space.txt",sep=""),header=T)
#trait_Dapmag: A 20x5 matrix. Column 1 is site name and column 2 is region. Column 3 is age_at_maturity (all traits measured in common garden with no fish kairomones), column 4 is size_at_maturity, and column 5 is num_eggs (size of first clutch).
trait_Dapmag <- read.table(paste(dir_user,dir_rest,"/daphnia_traits.txt",sep=""),header=T)
#trait_comm: An 8x3 matrix. Column 1 is age_at_maturity (all traits measured in common garden with no fish kairomones), column 2 is size_at_maturity, and column 3 is num_eggs (size of first clutch). These are the average value for each of 8 taxonomic groupings (to species or genus) for 3 traits meaured in a no-fish-kairomone common garden experiment.
trait_comm <- read.table(paste(dir_user,dir_rest,"/community_trait_values.txt",sep=""),header=T,row.names=1)
# II. Manipulate raw data for calculations. -------------------------------
#community_subset: A 20x10 matrix. Column 1 is site name and column 2 is region. Column 3-10 are the 8 taxonomic groups for which we have common garden trait values.
community_subset <- as.data.frame(array(NA,dim=c(20,10),dimnames=list(NULL,c("region","Pond","Bosmina_longirostris","Ceriodaphnia_sp","Chydorus_sphaericus","Daphnia_curvirostris","Daphnia_pulex","Moina_sp","Simocephalus_vetulus","Daphnia_magna"))))
community_subset[,1:2] <- community[,1:2]
community_subset[,colnames(community_subset)=="Bosmina_longirostris"] <- community[colnames(community)=="Boslon"]
community_subset[,colnames(community_subset)=="Ceriodaphnia_sp"] <- community[colnames(community)=="Cerqua"] + community[colnames(community)=="Cerpul"]
community_subset[,colnames(community_subset)=="Chydorus_sphaericus"] <- community[colnames(community)=="Chysph"]
community_subset[,colnames(community_subset)=="Daphnia_curvirostris"] <- community[colnames(community)=="Dapcur"]
community_subset[,colnames(community_subset)=="Daphnia_pulex"] <- community[colnames(community)=="Dappul"]
community_subset[,colnames(community_subset)=="Moina_sp"] <- community[colnames(community)=="Moimac"] + community[colnames(community)=="Moimic"] + community[colnames(community)=="Moibra"]
community_subset[,colnames(community_subset)=="Simocephalus_vetulus"] <- community[colnames(community)=="Simvet"]
community_subset[,colnames(community_subset)=="Daphnia_magna"] <- community[colnames(community)=="Dapmag"]
##comm_avg_trait: A 5x20x3 array containing the 5 combinations of local vs. regional abundances and local vs. regional trait averages. I contend that the measure ecologists traditionally use is TC_localN_avgZ and that we will contrast that with TC_localN_localZ. I don't really care about the other metrics. This is for those writing dissertations about the Price euqation to figure out. For regional abundance, we either use that for all species (TC_avgN_avgZ_ALL) or for D. magna only (TC_avgN_avgZ_Dapmag).
comm_avg_trait <- array(NA,dim=c(6,20,3),dimnames=list(c("TC_localN_avgZ","TC_avgN_avgZ_ALL","TC_avgN_avgZ_Dapmag","TC_avgN_localZ_ALL","TC_avgN_localZ_Dapmag","TC_localN_localZ"),community$Pond,c("age_at_maturity","size_at_maturity","num_eggs")))
#TC_localN_avgZ
comm_avg_trait[1,,] <- calc_TC(community_subset[,3:10],trait_comm)
#TC_avgN_avgZ_ALL
comm_avg_trait[2,,] <- calc_TC(matrix(colSums(community_subset[,3:10]),nrow=20,ncol=8,byrow=TRUE),trait_comm)
#TC_avgN_avgZ_Dapmag
sub <- community_subset[,3:10]
sub[,8] <- mean(sub[,8])
comm_avg_trait[3,,] <- calc_TC(sub,trait_comm)
#TC_avgN_localZ_ALL
sub <- list(trait_comm,trait_Dapmag[,3:5])
comm_avg_trait[4,,] <- calc_TC(matrix(colSums(community_subset[,3:10]),nrow=20,ncol=8,byrow=TRUE),sub,loc=T,spec=8)
#TC_avgN_localZ_Dapmag
sub_trait <- list(trait_comm,trait_Dapmag[,3:5])
sub_comm <- community_subset[,3:10]
sub_comm[,8] <- mean(sub_comm[,8])
comm_avg_trait[5,,] <- calc_TC(sub_comm,sub_trait,loc=T,spec=8)
#TC_localN_localZ
sub <- list(trait_comm,trait_Dapmag[,3:5])
comm_avg_trait[6,,] <- calc_TC(community_subset[,3:10],sub,loc=T,spec=8)
#If loc=F, trait is a species X trait matrix. If loc=T, sub is a list with the first element the regional trait matrix and each subsequent elements the local trait matrices for however many species that data is available. If loc=T, then spec has the number of the row in the species X trait matrix for which the local trait data is available.
calc_TC <- function(comm,trait,loc=NULL,spec=NULL){
if(is.null(loc)){
TC <- array(NA,dim=c(dim(comm)[1],dim(trait)[2]))
for(i in 1:dim(comm)[1]){#for each site
for(j in 1:dim(trait)[2]){#for each trait
TC[i,j] <- sum((comm[i,] / sum(comm[i,])) * trait[,j])
}
}
return(TC)
}
else{
TC <- array(NA,dim=c(dim(comm)[1],dim(trait[[1]])[2]))
for(i in 1:dim(comm)[1]){#for each site
for(j in 1:(dim(trait[[1]])[2])){#for each trait
for(k in 1:(length(trait)-1)){#for each species with local trait data
trait[[1]][spec[k],] <- trait[[k+1]][i,]
TC[i,j] <- sum((comm[i,] / sum(comm[i,])) * trait[[1]][,j])
}
}
}
return(TC)
}
}
# I. Input raw data -------------------------------------------------------
dir_user <- getwd()
dir_rest <- "/Dropbox/JP_LG/JHP_Sarah_Space_Paper/data"
#community: A 20x21 matrix. Column 1 is site name and column 2 is region. Column 3-21 are the 19 zooplankton species. D. magna is column 9.
community <- read.table(paste(dir_user,dir_rest,"/community.txt",sep=""),header=T)
#environment: A 20x14 matrix. Column 1 is site name and column 2 is region. Column 3-14 are the 12 environmental variables.
environment <- read.table(paste(dir_user,dir_rest,"/environment.txt",sep=""),header=T)
#space: A 20x4 matrix. Column 1 is site name and column 2 is region. Column 3 is the Latitude and column 4 is the longitude of each site.
space <- read.table(paste(dir_user,dir_rest,"/space.txt",sep=""),header=T)
#trait_Dapmag: A 20x5 matrix. Column 1 is site name and column 2 is region. Column 3 is age_at_maturity (all traits measured in common garden with no fish kairomones), column 4 is size_at_maturity, and column 5 is num_eggs (size of first clutch).
trait_Dapmag <- read.table(paste(dir_user,dir_rest,"/daphnia_traits.txt",sep=""),header=T)
#trait_comm: An 8x3 matrix. Column 1 is age_at_maturity (all traits measured in common garden with no fish kairomones), column 2 is size_at_maturity, and column 3 is num_eggs (size of first clutch). These are the average value for each of 8 taxonomic groupings (to species or genus) for 3 traits meaured in a no-fish-kairomone common garden experiment.
trait_comm <- read.table(paste(dir_user,dir_rest,"/community_trait_values.txt",sep=""),header=T,row.names=1)
# II. Manipulate raw data for calculations. -------------------------------
#community_subset: A 20x10 matrix. Column 1 is site name and column 2 is region. Column 3-10 are the 8 taxonomic groups for which we have common garden trait values.
community_subset <- as.data.frame(array(NA,dim=c(20,10),dimnames=list(NULL,c("region","Pond","Bosmina_longirostris","Ceriodaphnia_sp","Chydorus_sphaericus","Daphnia_curvirostris","Daphnia_pulex","Moina_sp","Simocephalus_vetulus","Daphnia_magna"))))
community_subset[,1:2] <- community[,1:2]
community_subset[,colnames(community_subset)=="Bosmina_longirostris"] <- community[colnames(community)=="Boslon"]
community_subset[,colnames(community_subset)=="Ceriodaphnia_sp"] <- community[colnames(community)=="Cerqua"] + community[colnames(community)=="Cerpul"]
community_subset[,colnames(community_subset)=="Chydorus_sphaericus"] <- community[colnames(community)=="Chysph"]
community_subset[,colnames(community_subset)=="Daphnia_curvirostris"] <- community[colnames(community)=="Dapcur"]
community_subset[,colnames(community_subset)=="Daphnia_pulex"] <- community[colnames(community)=="Dappul"]
community_subset[,colnames(community_subset)=="Moina_sp"] <- community[colnames(community)=="Moimac"] + community[colnames(community)=="Moimic"] + community[colnames(community)=="Moibra"]
community_subset[,colnames(community_subset)=="Simocephalus_vetulus"] <- community[colnames(community)=="Simvet"]
community_subset[,colnames(community_subset)=="Daphnia_magna"] <- community[colnames(community)=="Dapmag"]
##comm_avg_trait: A 5x20x3 array containing the 5 combinations of local vs. regional abundances and local vs. regional trait averages. I contend that the measure ecologists traditionally use is TC_localN_avgZ and that we will contrast that with TC_localN_localZ. I don't really care about the other metrics. This is for those writing dissertations about the Price euqation to figure out. For regional abundance, we either use that for all species (TC_avgN_avgZ_ALL) or for D. magna only (TC_avgN_avgZ_Dapmag).
comm_avg_trait <- array(NA,dim=c(6,20,3),dimnames=list(c("TC_localN_avgZ","TC_avgN_avgZ_ALL","TC_avgN_avgZ_Dapmag","TC_avgN_localZ_ALL","TC_avgN_localZ_Dapmag","TC_localN_localZ"),community$Pond,c("age_at_maturity","size_at_maturity","num_eggs")))
#TC_localN_avgZ
comm_avg_trait[1,,] <- calc_TC(community_subset[,3:10],trait_comm)
#TC_avgN_avgZ_ALL
comm_avg_trait[2,,] <- calc_TC(matrix(colSums(community_subset[,3:10]),nrow=20,ncol=8,byrow=TRUE),trait_comm)
#TC_avgN_avgZ_Dapmag
sub <- community_subset[,3:10]
sub[,8] <- mean(sub[,8])
comm_avg_trait[3,,] <- calc_TC(sub,trait_comm)
#TC_avgN_localZ_ALL
sub <- list(trait_comm,trait_Dapmag[,3:5])
comm_avg_trait[4,,] <- calc_TC(matrix(colSums(community_subset[,3:10]),nrow=20,ncol=8,byrow=TRUE),sub,loc=T,spec=8)
#TC_avgN_localZ_Dapmag
sub_trait <- list(trait_comm,trait_Dapmag[,3:5])
sub_comm <- community_subset[,3:10]
sub_comm[,8] <- mean(sub_comm[,8])
comm_avg_trait[5,,] <- calc_TC(sub_comm,sub_trait,loc=T,spec=8)
#TC_localN_localZ
sub <- list(trait_comm,trait_Dapmag[,3:5])
comm_avg_trait[6,,] <- calc_TC(community_subset[,3:10],sub,loc=T,spec=8)
#Read in each TC metric
Tc <- comm_avg_trait[1,,] ##TC_localN_avgZ
Tcavg <- comm_avg_trait[3,,] ##TC_avgN_avgZ_Dapmag
Tcn <- comm_avg_trait[5,,] ##TC_avgN_localZ_Dapmag
Tp <- comm_avg_trait[6,,] ##TC_localN_localZ
Tc <- as.data.frame(Tc)
Tcavg <- as.data.frame(Tcavg)
Tcn <- as.data.frame(Tcn)
Tp <- as.data.frame(Tp)
colnames(Tc) <- c("amat", "lmat", "c1")
colnames(Tcavg) <- c("amat", "lmat", "c1")
colnames(Tcn) <- c("amat", "lmat", "c1")
colnames(Tp) <- c("amat", "lmat", "c1")
#Figure for arable land
#lmat, arable
plot(environment$ArableLand, Tc$lmat, pch = 19, cex = 2, xlab = "percent nearby arable land", ylab = "Tc", ylim=c(1,3.5))
fit <- lm(Tc$lmat ~ environment$ArableLand)
abline(fit, lwd = 2)
points(environment$ArableLand, Tcavg$lmat, pch=19, cex=2, col="blue")
fit2 <- lm(Tcavg$lmat ~ environment$ArableLand)
abline(fit2, lwd = 2, col="blue")
points(environment$ArableLand, Tcn$lmat, pch=19, cex=2, col="red")
fit2 <- lm(Tcn$lmat ~ environment$ArableLand)
abline(fit2, lwd = 2, col="red")
points(environment$ArableLand, Tp$lmat, pch=19, cex=2, col="green")
fit2 <- lm(Tp$lmat ~ environment$ArableLand)
abline(fit2, lwd = 2, col="green")
q()
?family
?formula
q()
load("/Users/jhpantel/Desktop/snail_Jan_12_2017.RData")
full[10,,4]
full[22,,4]
full[22,,1]
z<-1
load(paste("/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/",dir[z],"/",spec[z],"/jsample.RData", sep=""))
z<-19
blah <- full[z,5:18,4]
blah
blah <- full[,5:18,4]
blah
blah2 <- blah/60000
View(blah2)
#gather data
tab2 <- full[,c(1,3,2,33),1]
tab2_25 <- full[,c(1,3,2,33),2]
tab2_975 <- full[,c(1,3,2,33),3]
#format
tab2_format <- paste(round(tab2,2), " (", round(tab2_25,2), ", ", round(tab2_975,2), ")", sep="")
tab2_final <- data.frame(phiW=tab2_format[1:27], cW=tab2_format[28:54], phiD=tab2_format[55:81], pW=tab2_format[82:108], row.names=spec)
write.csv(tab2_final, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/Table2.csv")
##Beta estimates
#gather data
beta <- full[,5:10,1]
beta_25 <- full[,5:10,2]
beta_975 <- full[,5:10,3]
sig <- full[,19:24,1]
beta_sig <- array(NA,dim=c(27,6))
beta_sig[which(sig>=.6)] <- beta[which(sig>=.6)]
#format
beta_format <- paste(round(beta,2), " (", round(beta_25,2), ", ", round(beta_975,2), ")", sep="")
#Add an asterick if parameter is significant.
beta_format_sig <- beta_format
beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F] <- paste(beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F],"*",sep="")
beta_final <- data.frame(size=beta_format_sig[1:27], veg=beta_format_sig[28:54], stability=beta_format_sig[55:81], lrs=beta_format_sig[82:108], mangrove=beta_format_sig[109:135], river=beta_format_sig[136:162], row.names=spec)
write.csv(beta_final, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/Table3.csv")
#gather data
beta <- full[,11:18,1]
beta_25 <- full[,11:18,2]
beta_975 <- full[,11:18,3]
sig <- full[,25:32,1]
beta_sig <- array(NA,dim=c(27,8))
beta_sig[which(sig>=.6)] <- beta[which(sig>=.6)]
#format
beta_format <- paste(round(beta,2), " (", round(beta_25,2), ", ", round(beta_975,2), ")", sep="")
#Add an asterick if parameter is significant.
beta_format_sig <- beta_format
beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F] <- paste(beta_format_sig[as.vector(sig) >= .6 & is.na(as.vector(sig))==F],"*",sep="")
beta_final <- data.frame(size=beta_format_sig[1:27], veg=beta_format_sig[28:54], stability=beta_format_sig[55:81], connec=beta_format_sig[82:108], rs=beta_format_sig[109:135], colsource=beta_format_sig[136:162], mangrove=beta_format_sig[163:189], river=beta_format_sig[190:216], row.names=spec)
write.csv(beta_final, "/Users/jhpantel/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/Table4.csv")
View(sig)
q()
library(ecospat)
?ecospat.niche.overlap
q()
setwd("~/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/10_Plesiophysa_guadeloupensis")
S <- matrix(scan("state.txt", n = 278*15,skip=1), 278, 15, byrow = TRUE)
colSums[S[,1:4]]
colSums(S[,1:4])
View(S)
which(S[,1] == 2)
which(S[,2] == 2)
which(S[,3] == 2)
rm(list=ls())
setwd("~/OneDrive/Documents/CNRS/pantel_work/2015_model_run/for_manuscript/1_metapopulation_manuscript/covar/all_sites/results/26_Indoplanorbis_exustus")
#######################
# data loading        #
#######################
# matrix of site state
# 0 = non visited site or missing data
# 1 = site in state W (Wet)
# 2 = site in state D (Dry)
dry <- matrix(scan("dry_final.txt", n = 278*15,skip=1), 278, 15, byrow = TRUE)
# state matrix
# 0 = non visited site or missing data
# 1 = species not detected (i.e., either dry or wet site)
# 2 = species detected (i.e., necessarily a wet site)
S <- matrix(scan("state.txt", n = 278*15,skip=1), 278, 15, byrow = TRUE)
# matrixes of visits and repeated visits within the same occasion
# correspond  to two 280*15 matrices (sites by year)
# first eleven rows correspond to visits
# next eleven rows correspond to repeated visits within the same occasion
presence <- matrix(scan("presence.txt", n = 278*30,skip=1), 278, 30, byrow = TRUE)
y <- structure(presence,.Dim = c(278L,15L,2L))
####Read in covariates####
# covariates site-specific
cov <- read.table("cov.txt",h=T)
size = cov$size
size <- (size-mean(size))/sd(size)
connec = cov$connec
connec <- (connec-mean(connec))/sd(connec)
veg = cov$veg
veg <- (veg-mean(veg))/sd(veg)
stability = cov$stability
stability <- (stability-mean(stability))/sd(stability)
habit <- read.table("habit.txt",h=T)
mangrove = habit$mangrove
mangrove <- (mangrove-mean(mangrove))/sd(mangrove)
river = habit$river
river <- (river-mean(river))/sd(river)
# covariates year-specific
# little rainy season (lrs): cumulative rainfall during the little rainy season from March 1 to May 31, 92 days, e.g. during the period of putative extinction
# rainy season (rs): cumulative rainfall during the rainy season from (i) July 1 - Dec. 31 of year preceding sampling campaign (184 days, lrs_July_Dec) and (ii) 60 days preceding the first date of the sampling campaign (60 days, rs_60_days)
pluvio <- read.table("pluvio.txt",h=T)
lrs=pluvio$lrs
rs_1=pluvio$rs_July_Dec
#rs_2=pluvio$rs_60_days
lrs <- (lrs-mean(lrs))/sd(lrs)
rs_1 <- (rs_1-mean(rs_1))/sd(rs_1)
#rs_2 <- (rs_2-mean(rs_2))/sd(rs_2)
# covariates year and site-specific
colsource <- matrix(scan("colsource.txt", n = 278*15), 278, 15, byrow = TRUE)
colsource <- (colsource-mean(colsource))/sqrt(mean((colsource-mean(colsource))*(colsource-mean(colsource))))
# number of sites
nsite<-dim(y)[1]
# number de repetitions
nrep<-2
# number of visits to sites
nyear<-15
############################################################
# compute the year a site is first visited                 #
############################################################
e <- NULL
for (i in 1:nsite)
{
temp <- 1:nyear
tempo <- min(temp[S[i,]==1],temp[S[i,]==2],temp[S[i,]==3])
e <- c(e,tempo)
}
############################################################
# compute the year a site is last visited                  #
############################################################
fin <- NULL
for (i in 1:nsite)
{
temp <- 1:nyear
tempo <- max(temp[S[i,]==1],temp[S[i,]==2],temp[S[i,]==3])
fin <- c(fin,tempo)
}
##############################
# compute X(t)               #
##############################
# X(t) = 1 if a site is in state D
# X(t) = 0 if a site is in state W or not visited
#X <- matrix(0,nsite,ncol(S))
#X[dry==2]=1
X <- matrix(0,nsite,ncol(S))
X[dry==2]=1
#Include state uncertanity for some sites, give Pr(dry)
X[dry > 0 & dry < 1] <- 1 - dry[dry > 0 & dry < 1]
Zst<- S
# Winbugs g?re pas les 0, il faut les remplacer par des NA dans Zst et dans les donn?es
Zst[(Zst == 0)] <- NA
y[y==0]=NA
##Add at least one presence each year for initial Zst
GT_list <- apply(Zst[1:250,],2,function(x) max(unique(x),na.rm=T)==2)
MG_list <- apply(Zst[251:278,],2,function(x) max(unique(x),na.rm=T)==2)
list <- cbind(GT_list,MG_list)
list
q()
